name: Release & Publish

on:
  push:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js 22
        uses: actions/setup-node@v3
        with:
          node-version: '22.x'
          cache: 'npm'
          # KORREKTUR: Explizite Pfade f√ºr den Cache
          cache-dependency-path: |
            frontend/package-lock.json
            backend/package-lock.json
      - name: Install & Run Backend Unit Tests
        run: |
          npm install
          npm test
        working-directory: ./backend
      - name: Create Test Env File & Run API Tests
        run: |
          cp backend/.env.test backend/.env
          docker-compose up --build -d db backend
          until docker-compose exec -T db pg_isready --username=$POSTGRES_USER; do sleep 2; done
          docker-compose exec -T backend npm run test:api
          docker-compose down
        env:
          POSTGRES_USER: testuser

  release-and-publish:
    needs: test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        project: [frontend, backend]
    permissions:
      contents: write
      issues: write
      pull-requests: write
      packages: write
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js 22
        uses: actions/setup-node@v3
        with:
          node-version: '22.x'
          cache: 'npm'
          cache-dependency-path: ${{ matrix.project }}/package-lock.json
      - name: Install dependencies
        run: npm install
        working-directory: ./${{ matrix.project }}
      - name: Run semantic-release
        id: semantic
        run: npx semantic-release
        working-directory: ./${{ matrix.project }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Log in to GitHub Container Registry
        if: steps.semantic.outputs.new_release_published == 'true'
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract metadata for Docker
        if: steps.semantic.outputs.new_release_published == 'true'
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ghcr.io/${{ github.repository_owner }}/turnier-manager-${{ matrix.project }}
          tags: |
            type=semver,pattern={{version}}
            type=raw,value=latest
      - name: Build and push Docker image
        if: steps.semantic.outputs.new_release_published == 'true'
        uses: docker/build-push-action@v4
        with:
          context: ./${{ matrix.project }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}