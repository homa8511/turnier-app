name: Backend CI, Linting & Code Analysis

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  lint:
    name: Lint Frontend & Backend
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js 22
        uses: actions/setup-node@v4
        with:
          node-version: '22.x'
          cache: 'npm'
          cache-dependency-path: |
            frontend/package-lock.json
            backend/package-lock.json
      - name: Install & Lint Backend
        run: |
          npm install
          npm run lint
        working-directory: ./backend
      - name: Install & Lint Frontend
        run: |
          npm install
          npm run lint
        working-directory: ./frontend

  unit-tests:
    needs: lint
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [backend, frontend]
    name: Unit Tests (${{ matrix.service }})
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js 22
        uses: actions/setup-node@v4
        with:
          node-version: '22.x'
          cache: 'npm'
          cache-dependency-path: ${{ matrix.service }}/package-lock.json
      - name: Install Dependencies
        run: npm install
        working-directory: ./${{ matrix.service }}
      - name: Run Unit Tests
        run: |
          if [ "${{ matrix.service }}" = "backend" ]; then
            npm test
          elif [ "${{ matrix.service }}" = "frontend" ]; then
            npm run test:coverage
          fi
        working-directory: ./${{ matrix.service }}
      - name: Upload Unit Test Coverage
        if: matrix.service == 'frontend'
        uses: actions/upload-artifact@v5
        with:
          name: frontend-unit-test-coverage
          path: ./frontend/coverage
      - name: Upload Unit Test Coverage
        if: matrix.service == 'backend'
        uses: actions/upload-artifact@v5
        with:
          name: backend-unit-test-coverage
          path: ./backend/coverage/unit

  api-tests:
    needs: lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js 22
        uses: actions/setup-node@v4
        with:
          node-version: '22.x'
          cache: 'npm'
          cache-dependency-path: backend/package-lock.json

      - name: Install Backend Dependencies on Runner
        run: npm install
        working-directory: ./backend

      - name: Create Test Environment File
        run: cp backend/.env.test ./.env

      - name: Build and Start Docker Services
        run: docker compose -f docker-compose.ci.yml up --build -d

      - name: Wait for Backend Service to be healthy
        run: >
          until [ "$(docker inspect -f {{.State.Health.Status}} $(docker compose -f docker-compose.ci.yml ps -q backend))" = "healthy" ]; do
            echo "Waiting for backend service...";
            sleep 5;
          done

      - name: Run API Tests in Docker
        run: docker compose -f docker-compose.ci.yml run --rm test-runner

      - name: Upload API Test Coverage
        uses: actions/upload-artifact@v5
        with:
          name: api-test-coverage
          path: backend/coverage/api

      - name: Shutdown Docker Services
        if: always()
        run: docker compose -f docker-compose.ci.yml down

  sonarcloud-analysis:
    needs: [unit-tests, api-tests]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Download Backend Unit Test Coverage
        uses: actions/download-artifact@v6
        with:
          name: backend-unit-test-coverage
          path: backend/coverage/unit
      - name: Download Frontend Unit Test Coverage
        uses: actions/download-artifact@v6
        with:
          name: frontend-unit-test-coverage
          path: frontend/coverage
      - name: Download API Test Coverage
        uses: actions/download-artifact@v6
        with:
          name: api-test-coverage
          path: backend/coverage/api
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@v5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}